name: Build and Deploy

on:
  # workflow_dispatch:
  #   inputs:
  #     blog:
  #       description: "Run Tests"
  #       required: true
  #       default: "yes"

  pull_request:
    paths:
      - "src/**"

jobs:
  lint_test:
    uses: ./.github/workflows/lint-and-test.yaml

  build_and_push:
    needs: [lint_test]
    runs-on: ubuntu-latest
    outputs:
      sha_short : ${{ steps.vars.outputs.sha_short }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Get Short SHA
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/greet-me-flask-app/greet-me:${{ steps.vars.outputs.sha_short }}
          platforms: linux/arm64

  deploy_staging:
    needs: [build_and_push]
    runs-on: self-hosted
    environment: stage
    outputs:
      sha_short : ${{ needs.build_and_push.outputs.sha_short }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Update docker image label
        run: |
          cd kubernetes/stages/staging
          sed -i "s/greet-me:.*/greet-me:${{ needs.build_and_push.outputs.sha_short }}/g" patch-image.yaml
          cat patch-image.yaml

      - name: Deploy to Staging
        run: |
          kustomize build kubernetes/stages/staging/ | kubectl apply -f -
          sleep 10

      - name: Commit changes
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          if ! git diff-index --quiet HEAD; then
            git commit -m "Update docker image tag"
            git push origin HEAD:${{ github.head_ref }}
          fi

  deploy_prod:
    needs: [deploy_staging]
    runs-on: self-hosted
    environment: prod

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Update docker image label
        run: |
          git pull origin ${{ github.head_ref }}
          cd kubernetes/stages/prod
          sed -i "s/greet-me:.*/greet-me:${{ needs.deploy_staging.outputs.sha_short }}/g" patch-image.yaml
          cat patch-image.yaml

      - name: Deploy to Prod
        run: |
          kustomize build kubernetes/stages/prod/ | kubectl apply -f -
          sleep 10

      - name: Commit changes
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          if ! git diff-index --quiet HEAD; then
            git commit -m "Update docker image tag"
            git push origin HEAD:${{ github.head_ref }}
          fi
