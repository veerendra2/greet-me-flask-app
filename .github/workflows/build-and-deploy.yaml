name: Build and Deploy

on:
  workflow_dispatch:
    inputs:
      blog:
        description: "Run Tests"
        required: true
        default: "yes"

  # pull_request:
  #   branches:
  #     - main

jobs:
  lint_test:
    uses: ./.github/workflows/lint-and-test.yaml

  build_and_push:
    needs: [lint_test]
    if: "-n \"$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} src/)\""
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Get Short SHA
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/greet-me-flask-app/greet-me:${{ steps.vars.outputs.sha_short }}

  deploy_staging:
    needs: [build_and_push]
    runs-on: self-hosted

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Step
        run: echo ${GITHUB_SHA::7}

      - name: Run deploy script on self-hosted runner
        run: |
          echo ${{ needs.build_and_push.outputs.sha_short }}
          kubectl get pods -n staging
          #./kustomize edit set image gcr.io/PROJECT_ID/IMAGE:TAG=gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA
          #./kustomize build . | kubectl apply -f -
          #kubectl rollout status deployment/$DEPLOYMENT_NAME
          #kubectl get services -o wide
          #sed "s/greet-me:.*/greet-me:v0.2/g" patch-image.yaml

  deploy_prod:
    needs: [deploy_staging]
    runs-on: self-hosted

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Run deploy script on self-hosted runner
        run: |
          echo ${{ needs.build_and_push.outputs.sha_short }}
          kubectl get pods -n prod
          #./kustomize edit set image gcr.io/PROJECT_ID/IMAGE:TAG=gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA
          #./kustomize build . | kubectl apply -f -
          #kubectl rollout status deployment/$DEPLOYMENT_NAME
          #kubectl get services -o wide
