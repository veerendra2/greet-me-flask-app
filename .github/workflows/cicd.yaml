name: CI/CD Pipeline

on:
  workflow_dispatch:
    inputs:
      blog:
        description: "Run Tests"
        required: true
        default: "yes"
  # pull_request:
  #   branches:
  #     - main
jobs:
  lint_and_test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python 3.10
        uses: actions/setup-python@v3

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pylint

      - name: Run lint tests
        run: |
          pylint src/
        continue-on-error: true

  unit_test:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python 3.10
        uses: actions/setup-python@v3

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .
          pip install pytest

      - name: Run unit tests
        run: |
          pytest tests/

  build_and_push:
    needs: [lint]
    if: "-n \"$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} src/)\""
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/greet-me-flask-app/greet-me:${{ github.sha }}

  deploy_staging:
    needs: [build_and_push]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: self-hosted

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Run deploy script on self-hosted runner
        run: |
          #./kustomize edit set image gcr.io/PROJECT_ID/IMAGE:TAG=gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA
          #./kustomize build . | kubectl apply -f -
          #kubectl rollout status deployment/$DEPLOYMENT_NAME
          #kubectl get services -o wide
          #sed "s/greet-me:.*/greet-me:v0.2/g" patch-image.yaml

  deploy_prod:
    needs: [build_and_push]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: self-hosted

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Run deploy script on self-hosted runner
        run: |
          #./kustomize edit set image gcr.io/PROJECT_ID/IMAGE:TAG=gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA
          #./kustomize build . | kubectl apply -f -
          #kubectl rollout status deployment/$DEPLOYMENT_NAME
          #kubectl get services -o wide
